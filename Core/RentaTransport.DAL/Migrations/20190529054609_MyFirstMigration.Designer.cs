// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RentaTransport.DAL.DataContexts;

namespace RentaTransport.DAL.Migrations
{
    [DbContext(typeof(MainDataContext))]
    [Migration("20190529054609_MyFirstMigration")]
    partial class MyFirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RentaTransport.DAL.DAOs.BanTypeDAO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid?>("CreatedUserId");

                    b.Property<string>("Description");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<Guid?>("ModifiedUserId");

                    b.Property<string>("Name");

                    b.Property<byte>("Status");

                    b.HasKey("Id");

                    b.ToTable("BanTypes");
                });

            modelBuilder.Entity("RentaTransport.DAL.DAOs.BrandDAO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid?>("CreatedUserId");

                    b.Property<string>("Description");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<Guid?>("ModifiedUserId");

                    b.Property<string>("Name");

                    b.Property<byte>("Status");

                    b.HasKey("Id");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("RentaTransport.DAL.DAOs.CarAdditionDAO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid?>("CreatedUserId");

                    b.Property<string>("Description");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<Guid?>("ModifiedUserId");

                    b.Property<string>("Name");

                    b.Property<byte>("Status");

                    b.HasKey("Id");

                    b.ToTable("CarAdditions");
                });

            modelBuilder.Entity("RentaTransport.DAL.DAOs.CarDAO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("BanTypeId");

                    b.Property<Guid>("BrandId");

                    b.Property<Guid>("CarAdditionId");

                    b.Property<decimal>("CarEngine");

                    b.Property<byte>("CarGear");

                    b.Property<Guid>("CarImageId");

                    b.Property<Guid>("CityId");

                    b.Property<Guid>("ColorId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid?>("CreatedUserId");

                    b.Property<string>("Description");

                    b.Property<decimal>("DrivingDistance");

                    b.Property<Guid>("FuelTypeId");

                    b.Property<Guid>("ModelId");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<Guid?>("ModifiedUserId");

                    b.Property<decimal>("Price");

                    b.Property<byte>("Status");

                    b.Property<byte>("Transmission");

                    b.HasKey("Id");

                    b.HasIndex("BanTypeId");

                    b.HasIndex("BrandId");

                    b.HasIndex("CarAdditionId");

                    b.HasIndex("CityId");

                    b.HasIndex("ColorId");

                    b.HasIndex("FuelTypeId");

                    b.HasIndex("ModelId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("RentaTransport.DAL.DAOs.CarImageDAO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CarId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid?>("CreatedUserId");

                    b.Property<string>("MimeType");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<Guid?>("ModifiedUserId");

                    b.Property<string>("Name");

                    b.Property<byte[]>("Photo");

                    b.Property<byte>("Status");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.ToTable("CarImages");
                });

            modelBuilder.Entity("RentaTransport.DAL.DAOs.CityDAO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid?>("CreatedUserId");

                    b.Property<string>("Description");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<Guid?>("ModifiedUserId");

                    b.Property<string>("Name");

                    b.Property<byte>("Status");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("RentaTransport.DAL.DAOs.ColorDAO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid?>("CreatedUserId");

                    b.Property<string>("Description");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<Guid?>("ModifiedUserId");

                    b.Property<string>("Name");

                    b.Property<byte>("Status");

                    b.HasKey("Id");

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("RentaTransport.DAL.DAOs.CustomerPhoneNumberDAO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid?>("CreatedUserId");

                    b.Property<string>("Description");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<Guid?>("ModifiedUserId");

                    b.Property<string>("PhoneNumber");

                    b.Property<byte>("Status");

                    b.HasKey("Id");

                    b.ToTable("CustomerPhoneNumbers");
                });

            modelBuilder.Entity("RentaTransport.DAL.DAOs.FuelTypeDAO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid?>("CreatedUserId");

                    b.Property<string>("Description");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<Guid?>("ModifiedUserId");

                    b.Property<string>("Name");

                    b.Property<byte>("Status");

                    b.HasKey("Id");

                    b.ToTable("FuelTypes");
                });

            modelBuilder.Entity("RentaTransport.DAL.DAOs.ModelDAO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("BrandId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid?>("CreatedUserId");

                    b.Property<string>("Description");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<Guid?>("ModifiedUserId");

                    b.Property<string>("Name");

                    b.Property<byte>("Status");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Models");
                });

            modelBuilder.Entity("RentaTransport.DAL.DAOs.CarDAO", b =>
                {
                    b.HasOne("RentaTransport.DAL.DAOs.BanTypeDAO", "BanType")
                        .WithMany()
                        .HasForeignKey("BanTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("RentaTransport.DAL.DAOs.BrandDAO", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("RentaTransport.DAL.DAOs.CarAdditionDAO", "CarAddition")
                        .WithMany()
                        .HasForeignKey("CarAdditionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("RentaTransport.DAL.DAOs.CityDAO", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("RentaTransport.DAL.DAOs.ColorDAO", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("RentaTransport.DAL.DAOs.FuelTypeDAO", "FuelType")
                        .WithMany()
                        .HasForeignKey("FuelTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("RentaTransport.DAL.DAOs.ModelDAO", "Model")
                        .WithMany()
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("RentaTransport.DAL.DAOs.CarImageDAO", b =>
                {
                    b.HasOne("RentaTransport.DAL.DAOs.CarDAO", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("RentaTransport.DAL.DAOs.ModelDAO", b =>
                {
                    b.HasOne("RentaTransport.DAL.DAOs.BrandDAO", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
